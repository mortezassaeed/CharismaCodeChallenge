// <auto-generated />
using Charisma.Pricing.Infra.Persistence.SQlEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Charisma.Pricing.Infra.Persistence.SQlEF.Migrations
{
    [DbContext(typeof(PricingDbContext))]
    [Migration("20230422173158_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Pricing")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Charisma.Pricing.Domain.PricingAggregate.ProductPricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPricing", "Pricing");
                });

            modelBuilder.Entity("Charisma.Pricing.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Product", "Pricing");
                });

            modelBuilder.Entity("Charisma.Pricing.Domain.PricingAggregate.ProductPricing", b =>
                {
                    b.HasOne("Charisma.Pricing.Domain.ProductAggregate.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Charisma.Framework.Domain.CommonValueObject.Price", "ActualPrice", b1 =>
                        {
                            b1.Property<int>("ProductPricingId")
                                .HasColumnType("int");

                            b1.Property<string>("CurrencyType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Actual_Price_CurrencyType");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Actual_Price_Amount");

                            b1.HasKey("ProductPricingId");

                            b1.ToTable("ProductPricing", "Pricing");

                            b1.WithOwner()
                                .HasForeignKey("ProductPricingId");
                        });

                    b.OwnsOne("Charisma.Framework.Domain.CommonValueObject.Price", "FinalPrice", b1 =>
                        {
                            b1.Property<int>("ProductPricingId")
                                .HasColumnType("int");

                            b1.Property<string>("CurrencyType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Final_Price_CurrencyType");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Final_Price_Amount");

                            b1.HasKey("ProductPricingId");

                            b1.ToTable("ProductPricing", "Pricing");

                            b1.WithOwner()
                                .HasForeignKey("ProductPricingId");
                        });

                    b.Navigation("ActualPrice")
                        .IsRequired();

                    b.Navigation("FinalPrice")
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Charisma.Pricing.Domain.ProductAggregate.Product", b =>
                {
                    b.OwnsOne("Charisma.Framework.Domain.CommonValueObject.Price", "BasePrice", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("CurrencyType")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Base_Price_CurrencyType");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Base_Price_Amount");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product", "Pricing");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("BasePrice")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
